/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   websocket-data-view.html
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../date-time/date-time.d.ts" />
/// <reference path="../paper-toast/paper-toast.d.ts" />
/// <reference path="../paper-dialog/paper-dialog.d.ts" />
/// <reference path="../paper-button/paper-button.d.ts" />

declare namespace UiElements {

  /**
   * A web socket communication log viewer for web socket request panel
   *
   * ### Example
   *
   * ```html
   * <websocket-data-view></websocket-data-view>
   * ```
   *
   * ### Styling
   *
   * `<websocket-data-view>` provides the following custom properties and
   * mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--websocket-data-view` | Mixin applied to the element | `{}`
   */
  class WebsocketDataView extends Polymer.Element {

    /**
     * List of communication messages with the socket
     */
    messages: any[]|null|undefined;

    /**
     * Computed value, true if messages are set
     */
    readonly hasMessages: boolean|null|undefined;

    /**
     * When saving a file this will be the download URL created by the
     * `URL.createObjectURL` function.
     */
    readonly downloadFileUrl: string|null|undefined;

    /**
     * Autogenerated file name for the download file.
     */
    readonly downloadFileName: string|null|undefined;

    /**
     * Computed value. True is current browser is Safari - the new IE.
     */
    readonly isSafari: boolean|null|undefined;
    _computeHasMessages(messages: any): any;

    /**
     * Sorts messages in a log so the newest messages are always on top.
     */
    _sortMessages(a: object|null, b: object|null): Number|null;

    /**
     * Returns a list of messages that can be exported.
     */
    _getExportData(): any;

    /**
     * Fires the `export-data` event. If the event is not canceled
     * then it will use default web implementation for file saving.
     */
    _exportMessages(): void;

    /**
     * Handler for the "download binary data" button click.
     * Exports the binary data.
     */
    _downloadBinary(e: ClickEvent|null): void;

    /**
     * Fires `export-data` event or calls `_saveToFile` if event is not handled
     *
     * @param data The data to export.
     * @param type `data` content type
     */
    _exportData(data: object|Blob|null, type: String|null): void;

    /**
     * Creates a file object form messages objects and opens the dialog
     * with the link to the file.
     *
     * @param type Content mime type
     */
    _saveToFile(data: String|Blob|null, type: String|null): void;

    /**
     * Handler for download link click to prevent default and close the dialog.
     */
    _downloadIconTap(): void;

    /**
     * Handler for file download dialog close.
     */
    _downloadDialogClose(): void;

    /**
     * Clears the list of the messages and sends `message-cleared` event.
     */
    _clearMessages(): void;
  }
}

interface HTMLElementTagNameMap {
  "websocket-data-view": UiElements.WebsocketDataView;
}
